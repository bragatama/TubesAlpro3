/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package TUBES;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Braga
 */
public class Admin extends javax.swing.JFrame implements Pilihan {

    private String id;
    private String nama;
    private String nohp;
    private String alamat;
    private String jns_kendaraan;
    private String nama_kendaraan;
    private String tglpinjam;
    private String tglkembali;
    private String durasi;
    private String hargapemesanan;
    private String tahun;
    private String harga;

    private String u_name;
    private String f_name;
    private String l_name;
    private String sql;
    private String query;

    
    

    public void clock() {
        SimpleDateFormat sdf = new SimpleDateFormat("EE, dd MMMM yyyy");
        SimpleDateFormat sd = new SimpleDateFormat("KK:mm:ss a");
        Thread clock = new Thread() {
            public void run() {
                try {
                    for (;;) {
                        Calendar cal = new GregorianCalendar();
                        jClock1.setText("Time   : " + sd.format(cal.getTime()));
                        jClock2.setText("Date   : " + sdf.format(cal.getTime()));

                        sleep(1000);

                    }
                } catch (InterruptedException ex) {
                    Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        };
        clock.start();
    }

    /**
     * Creates new form Admin
     */
    public Admin() {
        initComponents();
        clock();
        tableUser();
        tablePemesanan();
        tableMobil();
        tableMotor();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        entityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("tubesalpro?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTCPU").createEntityManager();
        logindataQuery = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT l FROM Logindata l");
        logindataList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : logindataQuery.getResultList();
        pemesananQuery = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT p FROM Pemesanan p");
        pemesananList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : pemesananQuery.getResultList();
        mobilQuery = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT m FROM Mobil m");
        mobilList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : mobilQuery.getResultList();
        motorQuery = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT m FROM Motor m");
        motorList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : motorQuery.getResultList();
        mobilQuery1 = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT m FROM Mobil m");
        mobilList1 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : mobilQuery1.getResultList();
        motorQuery1 = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT m FROM Motor m");
        motorList1 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : motorQuery1.getResultList();
        jLabel1 = new javax.swing.JLabel();
        jClock1 = new javax.swing.JLabel();
        jClock2 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableUser = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jUsername1 = new javax.swing.JTextField();
        jDelete = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jtxthapus3 = new javax.swing.JTextField();
        jhapus3 = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTablePemesanan = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jtxtcaripesan = new javax.swing.JTextField();
        jbtnkeuntungan = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableMobil = new javax.swing.JTable();
        jButtonadd = new javax.swing.JButton();
        jtxtaHapusMobil = new javax.swing.JTextField();
        jhapus = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableMotor = new javax.swing.JTable();
        jAdd = new javax.swing.JButton();
        jtxtHapusMotor = new javax.swing.JTextField();
        jhapus1 = new javax.swing.JButton();
        jLogout = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Century Gothic", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 255));
        jLabel1.setText("Welcome admin");

        jClock1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jClock1.setText("jLabel2");

        jClock2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jClock2.setText("jLabel3");

        jTableUser.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5"
            }
        ));
        jTableUser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableUserMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableUser);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Username");

        jUsername1.setBackground(new java.awt.Color(214, 217, 223));
        jUsername1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jUsername1ActionPerformed(evt);
            }
        });

        jDelete.setBackground(new java.awt.Color(47, 54, 64));
        jDelete.setForeground(new java.awt.Color(255, 255, 255));
        jDelete.setText("Delete");
        jDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 672, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jDelete)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel4)
                        .addComponent(jUsername1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jUsername1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jDelete)))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Daftar User", jPanel1);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("ID Pemesanan");

        jtxthapus3.setBackground(new java.awt.Color(214, 217, 223));
        jtxthapus3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jhapus3.setBackground(new java.awt.Color(47, 54, 64));
        jhapus3.setForeground(new java.awt.Color(255, 255, 255));
        jhapus3.setText("HAPUS");
        jhapus3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jhapus3ActionPerformed(evt);
            }
        });

        jTablePemesanan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5"
            }
        ));
        jTablePemesanan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTablePemesananMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTablePemesanan);

        jScrollPane5.setViewportView(jScrollPane2);

        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jtxtcaripesan.setBackground(new java.awt.Color(214, 217, 223));
        jtxtcaripesan.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jtxtcaripesan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtcaripesanActionPerformed(evt);
            }
        });
        jtxtcaripesan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtxtcaripesanKeyReleased(evt);
            }
        });

        jbtnkeuntungan.setBackground(new java.awt.Color(47, 54, 64));
        jbtnkeuntungan.setForeground(new java.awt.Color(255, 255, 255));
        jbtnkeuntungan.setText("Keuntungan");
        jbtnkeuntungan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnkeuntunganActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jtxtcaripesan, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbtnkeuntungan)
                .addGap(267, 267, 267))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtxtcaripesan, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtnkeuntungan))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 810, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jtxthapus3, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jhapus3))
                .addContainerGap(73, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtxthapus3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jhapus3)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(131, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Daftar Pemesanan", jPanel2);

        jTableMobil.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableMobil.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableMobilMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTableMobil);

        jButtonadd.setBackground(new java.awt.Color(47, 54, 64));
        jButtonadd.setForeground(new java.awt.Color(255, 255, 255));
        jButtonadd.setText("ADD MOBIL");
        jButtonadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonaddActionPerformed(evt);
            }
        });

        jtxtaHapusMobil.setBackground(new java.awt.Color(214, 217, 223));
        jtxtaHapusMobil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtaHapusMobilActionPerformed(evt);
            }
        });

        jhapus.setBackground(new java.awt.Color(47, 54, 64));
        jhapus.setForeground(new java.awt.Color(255, 255, 255));
        jhapus.setText("Hapus");
        jhapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jhapusActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 636, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jhapus)
                    .addComponent(jtxtaHapusMobil, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonadd))
                .addGap(0, 153, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jButtonadd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtxtaHapusMobil, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jhapus))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(162, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Daftar Mobil", jPanel3);

        jTableMotor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableMotor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableMotorMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jTableMotor);

        jAdd.setBackground(new java.awt.Color(47, 54, 64));
        jAdd.setForeground(new java.awt.Color(255, 255, 255));
        jAdd.setText("ADD MOTOR");
        jAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAddActionPerformed(evt);
            }
        });

        jtxtHapusMotor.setBackground(new java.awt.Color(214, 217, 223));

        jhapus1.setBackground(new java.awt.Color(47, 54, 64));
        jhapus1.setForeground(new java.awt.Color(255, 255, 255));
        jhapus1.setText("Hapus");
        jhapus1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jhapus1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 636, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtxtHapusMotor, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jhapus1)
                    .addComponent(jAdd))
                .addContainerGap(153, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtxtHapusMotor, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jhapus1))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Daftar Motor", jPanel4);

        jLogout.setBackground(new java.awt.Color(47, 54, 64));
        jLogout.setForeground(new java.awt.Color(255, 255, 255));
        jLogout.setText("LOGOUT");
        jLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jLogoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLogout))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jClock1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jClock2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jClock1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jClock2))
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addComponent(jLogout)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    DefaultTableModel model;

    @Override
    public void tableUser() {
        Object[] user = {"USERNAME", "FIRST NAME", "LASTNAME"};
        model = new DefaultTableModel(null, user);
        jTableUser.setModel(model);
        Connection conn = new OurConnection().getConnection();
        try {
            Statement st = conn.createStatement();
            sql = "SELECT * from logindata;";
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                u_name = rs.getString(3);
                f_name = rs.getString(1);
                l_name = rs.getString(2);
                String[] data = {u_name, f_name, l_name};
                model.addRow(data);
            }
        } catch (SQLException ex) {
            Logger.getLogger(HOME.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    @Override
    public void tablePemesanan() {
        Object[] pemesanan = {"ID PEMESANAN", "NAMA PEMESAN", "NO HP", "ALAMAT", "JENIS KENDARAAN", "NAMA KENDARAAN", "TANGGAL PINJAM", "TANGGAL KEMBALI", "DURASI PEMINJAMAN", "KEUNTUNGAN"};
        model = new DefaultTableModel(null, pemesanan);
        jTablePemesanan.setModel(model);
        Connection conn = new OurConnection().getConnection();
        try {
            Statement st = conn.createStatement();
            sql = "SELECT * from pemesanan;";
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                id = rs.getString(1);
                nama = rs.getString(2);
                nohp = rs.getString(3);
                alamat = rs.getString(4);
                jns_kendaraan = rs.getString(5);
                nama_kendaraan = rs.getString(6);
                tglpinjam = rs.getString(7);
                tglkembali = rs.getString(8);
                durasi = rs.getString(9);
                hargapemesanan = rs.getString(10);
                String[] data = {id, nama, nohp, alamat, jns_kendaraan, nama_kendaraan, tglpinjam, tglkembali, durasi, hargapemesanan};
                model.addRow(data);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    @Override
    public void tableMobil() {
        Object[] mobil = {"ID MOBIL", "NAMA MOBIL", "TAHUN MOBIL", "HARGA MOBIL"};
        model = new DefaultTableModel(null, mobil);
        jTableMobil.setModel(model);
        Connection conn = new OurConnection().getConnection();
        try {
            Statement st = conn.createStatement();
            sql = "select * from mobil order by harga_mobil desc;";
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                id = rs.getString(1);
                nama = rs.getString(2);
                tahun = rs.getString(3);
                harga = rs.getString(4);
                String[] data = {id, nama, tahun, harga};
                model.addRow(data);
            }

        } catch (SQLException ex) {
            Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    @Override
    public void tableMotor() {
        Object[] mobil = {"ID MOTOR", "NAMA MOTOR", "TAHUN MOTOR", "HARGA MOTOR"};
        model = new DefaultTableModel(null, mobil);
        jTableMotor.setModel(model);
        Connection conn = new OurConnection().getConnection();
        try {
            Statement st = conn.createStatement();
            sql = "SELECT * from motor order by harga_motor desc;";
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                id = rs.getString(1);
                nama = rs.getString(2);
                tahun = rs.getString(3);
                harga = rs.getString(4);
                String[] data = {id, nama, tahun, harga};
                model.addRow(data);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public void pilihUser() {
        PreparedStatement ps;
        ResultSet rs;
        try {
            int row = jTableUser.getSelectedRow();
            String ClickTable = (String) (jTableUser.getModel().getValueAt(row, 0));
            query = "SELECT `u_uname` FROM `logindata` WHERE `u_uname` ='" + ClickTable + "' ";
            Connection conn = new OurConnection().getConnection();
            ps = conn.prepareStatement(query);
            rs = ps.executeQuery();

            if (rs.next()) {
                String add1 = rs.getString("u_uname");
                jUsername1.setText(add1);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void hapusUser() {
        PreparedStatement ps;

        query = "DELETE FROM `logindata` WHERE `u_uname` =?";

        try {
            Connection conn = new OurConnection().getConnection();
            ps = conn.prepareStatement(query);
            ps.setString(1, jUsername1.getText());
            ps.execute();
            JOptionPane.showMessageDialog(null, "Deleted");
        } catch (SQLException ex) {
            Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void pilihMobil() {
        PreparedStatement ps;
        ResultSet rs;
        try {
            int row = jTableMobil.getSelectedRow();
            String ClickTable = (String) (jTableMobil.getModel().getValueAt(row, 0));
            query = "SELECT `id_mobil` FROM `mobil` WHERE `id_mobil` ='" + ClickTable + "' ";
            Connection conn = new OurConnection().getConnection();
            ps = conn.prepareStatement(query);
            rs = ps.executeQuery();

            if (rs.next()) {
                String add1 = rs.getString("id_mobil");
                jtxtaHapusMobil.setText(add1);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void hapusMobil() {
        PreparedStatement ps;

        query = "DELETE FROM `mobil` WHERE `id_mobil` =?";

        try {
            Connection conn = new OurConnection().getConnection();
            ps = conn.prepareStatement(query);
            ps.setString(1, jtxtaHapusMobil.getText());
            ps.execute();
            JOptionPane.showMessageDialog(null, "Deleted");
        } catch (SQLException ex) {
            Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void pilihMotor() {
        PreparedStatement ps;
        ResultSet rs;
        try {
            int row = jTableMotor.getSelectedRow();
            String ClickTable = (String) (jTableMotor.getModel().getValueAt(row, 0));
            query = "SELECT `id_motor` FROM `motor` WHERE `id_motor` ='" + ClickTable + "' ";
            Connection conn = new OurConnection().getConnection();
            ps = conn.prepareStatement(query);
            rs = ps.executeQuery();

            if (rs.next()) {
                String add1 = rs.getString("id_motor");
                jtxtHapusMotor.setText(add1);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void hapusMotor() {
        PreparedStatement ps;

        query = "DELETE FROM `motor` WHERE `id_motor` =?";

        try {
            Connection conn = new OurConnection().getConnection();
            ps = conn.prepareStatement(query);
            ps.setString(1, jtxtHapusMotor.getText());
            ps.execute();
            JOptionPane.showMessageDialog(null, "Deleted");
        } catch (SQLException ex) {
            Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void pilihPemesanan() {
        PreparedStatement ps;
        ResultSet rs;
        try {
            int row = jTablePemesanan.getSelectedRow();
            String ClickTable = (String) (jTablePemesanan.getModel().getValueAt(row, 0));
            query = "SELECT `id_pemesanan` FROM `pemesanan` WHERE `id_pemesanan` ='" + ClickTable + "' ";
            Connection conn = new OurConnection().getConnection();
            ps = conn.prepareStatement(query);
            rs = ps.executeQuery();

            if (rs.next()) {
                String add1 = rs.getString("id_pemesanan");
                jtxthapus3.setText(add1);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void hapusPemesanan() {
        PreparedStatement ps;

        query = "DELETE FROM `pemesanan` WHERE `id_pemesanan` =?";

        try {
            Connection conn = new OurConnection().getConnection();
            ps = conn.prepareStatement(query);
            ps.setString(1, jtxthapus3.getText());
            ps.execute();
            JOptionPane.showMessageDialog(null, "Deleted");
        } catch (SQLException ex) {
            Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void jUsername1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jUsername1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jUsername1ActionPerformed

    private void jTableUserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableUserMouseClicked
        pilihUser();
    }//GEN-LAST:event_jTableUserMouseClicked

    private void jDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDeleteActionPerformed
        hapusUser();
        tableUser();
    }//GEN-LAST:event_jDeleteActionPerformed

    private void jButtonaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonaddActionPerformed
        AddMobil add = new AddMobil();
        add.setVisible(true);
        add.pack();
        add.setLocationRelativeTo(null);
        add.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.dispose();
    }//GEN-LAST:event_jButtonaddActionPerformed

    private void jLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jLogoutActionPerformed
        Login lgn = new Login();
        lgn.setVisible(true);
        lgn.pack();
        lgn.setLocationRelativeTo(null);
        lgn.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.dispose();
    }//GEN-LAST:event_jLogoutActionPerformed

    private void jtxtaHapusMobilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtaHapusMobilActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtaHapusMobilActionPerformed

    private void jTableMobilMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMobilMouseClicked
        pilihMobil();
    }//GEN-LAST:event_jTableMobilMouseClicked

    private void jhapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jhapusActionPerformed
        hapusMobil();
        tableMobil();
    }//GEN-LAST:event_jhapusActionPerformed

    private void jTableMotorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMotorMouseClicked
        pilihMotor();
    }//GEN-LAST:event_jTableMotorMouseClicked

    private void jhapus1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jhapus1ActionPerformed
        hapusMotor();
        tableMotor();
    }//GEN-LAST:event_jhapus1ActionPerformed

    private void jTablePemesananMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTablePemesananMouseClicked
        pilihPemesanan();
    }//GEN-LAST:event_jTablePemesananMouseClicked

    private void jhapus3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jhapus3ActionPerformed
        hapusPemesanan();
        tablePemesanan();
    }//GEN-LAST:event_jhapus3ActionPerformed

    private void jtxtcaripesanKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtcaripesanKeyReleased
        DefaultTableModel table = (DefaultTableModel) jTablePemesanan.getModel();
        String cari = jtxtcaripesan.getText();
        TableRowSorter<DefaultTableModel> trs = new TableRowSorter<DefaultTableModel>(table);
        jTablePemesanan.setRowSorter(trs);
        trs.setRowFilter(RowFilter.regexFilter(cari));
    }//GEN-LAST:event_jtxtcaripesanKeyReleased

    private void jAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAddActionPerformed
        // TODO add your handling code here: //motor
        AddMotor add = new AddMotor();
        add.setVisible(true);
        add.pack();
        add.setLocationRelativeTo(null);
        add.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.dispose();
    }//GEN-LAST:event_jAddActionPerformed

    private void jtxtcaripesanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtcaripesanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtcaripesanActionPerformed

    private void jbtnkeuntunganActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnkeuntunganActionPerformed
        Connection conn = new OurConnection().getConnection();
        try {
            Statement st = conn.createStatement();
            query = "SELECT SUM(harga_final) FROM pemesanan";
            ResultSet rs = st.executeQuery(query);
            while (rs.next()) {
                harga = rs.getString(1);
                JOptionPane.showMessageDialog(null, "Keuntungan adalah Rp. " + harga);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jbtnkeuntunganActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Admin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.persistence.EntityManager entityManager;
    private javax.swing.JButton jAdd;
    private javax.swing.JButton jButtonadd;
    private javax.swing.JLabel jClock1;
    private javax.swing.JLabel jClock2;
    private javax.swing.JButton jDelete;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JButton jLogout;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTableMobil;
    private javax.swing.JTable jTableMotor;
    private javax.swing.JTable jTablePemesanan;
    private javax.swing.JTable jTableUser;
    private javax.swing.JTextField jUsername1;
    private javax.swing.JButton jbtnkeuntungan;
    private javax.swing.JButton jhapus;
    private javax.swing.JButton jhapus1;
    private javax.swing.JButton jhapus3;
    private javax.swing.JTextField jtxtHapusMotor;
    private javax.swing.JTextField jtxtaHapusMobil;
    private javax.swing.JTextField jtxtcaripesan;
    private javax.swing.JTextField jtxthapus3;
    private java.util.List<TUBES.Logindata> logindataList;
    private javax.persistence.Query logindataQuery;
    private java.util.List<TUBES.Mobil> mobilList;
    private java.util.List<TUBES.Mobil> mobilList1;
    private javax.persistence.Query mobilQuery;
    private javax.persistence.Query mobilQuery1;
    private java.util.List<TUBES.Motor> motorList;
    private java.util.List<TUBES.Motor> motorList1;
    private javax.persistence.Query motorQuery;
    private javax.persistence.Query motorQuery1;
    private java.util.List<TUBES.Pemesanan> pemesananList;
    private javax.persistence.Query pemesananQuery;
    // End of variables declaration//GEN-END:variables
}
